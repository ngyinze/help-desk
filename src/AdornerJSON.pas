// This unit is autogenerated. Do not edit it manually.
// Source: JSON entered in editor
// Date: 11/20/2024 10:25:49 AM

unit AdornerJSON;

interface

uses
  System.Classes, System.JSON.Serializers, System.JSON;

type
  [JsonSerialize(TJsonMemberSerialization.Public)]
  TContent = class(TPersistent)
  private
    Fname: string;
    FSequence: string;
    Fcomponent: string;
    Fobject_: string;
  public
    property name: string read Fname write Fname;
    property sequence: string read FSequence write FSequence;
    property component: string read Fcomponent write Fcomponent;
    [JsonName('object')]
    property object_: string read Fobject_ write Fobject_;
  end;

  [JsonSerialize(TJsonMemberSerialization.Public)]
  TTopic = class(TPersistent)
  private
    Fname: string;
    Fcontent: TArray<TContent>;
  public
    destructor Destroy; override;
    property name: string read Fname write Fname;
    property content: TArray<TContent> read Fcontent write Fcontent;
  end;

  [JsonSerialize(TJsonMemberSerialization.Public)]
  TFormObj = class(TPersistent)
  private
    Finterface_: string;
    Ftopic: TArray<TTopic>;
  public
    destructor Destroy; override;
    class function FromJSON(const AValue: TJSONValue): TFormObj; overload; static;
    class function FromJSON(const AValue: string): TFormObj; overload; static;
    function ToJSONObject: TJSONValue;
    function ToJSONString: string;
    [JsonName('interface')]
    property interface_: string read Finterface_ write Finterface_;
    property topic: TArray<TTopic> read Ftopic write Ftopic;
  end;

  [JsonSerialize(TJsonMemberSerialization.Public)]
  TFormArray = class(TPersistent)
  private
    FDataset: TArray<TFormObj>;
  public
    destructor Destroy; override;
    class function FromJSON(const AValue: TJSONArray): TFormArray; overload; static;
    class function FromJSON(const AValue: string): TFormArray; overload; static;
    function ToJSONArray: TJSONArray;
    function ToJSONString: string;
    property Dataset: TArray<TFormObj> read FDataset write FDataset;
  end;

implementation

uses
  System.Generics.Collections;

destructor TTopic.Destroy;
begin
  TArray.FreeValues<TContent>(Fcontent);
  inherited Destroy;
end;

destructor TFormObj.Destroy;
begin
  TArray.FreeValues<TTopic>(Ftopic);
  inherited Destroy;
end;

class function TFormObj.FromJSON(const AValue: TJSONValue): TFormObj;
begin
  Result := TJSONMapper<TFormObj>.Default.FromObject(AValue);
end;

class function TFormObj.FromJSON(const AValue: string): TFormObj;
begin
  Result := TJSONMapper<TFormObj>.Default.FromObject(AValue);
end;

function TFormObj.ToJSONObject: TJSONValue;
begin
  Result := TJSONMapper<TFormObj>.Default.ToObject(Self);
end;

function TFormObj.ToJSONString: string;
begin
  Result := TJSONMapper<TFormObj>.Default.ToString(Self);
end;

destructor TFormArray.Destroy;
begin
  TArray.FreeValues<TFormObj>(FDataset);
  inherited Destroy;
end;

class function TFormArray.FromJSON(const AValue: TJSONArray): TFormArray;
begin
  var LArr := TJSONMapper<TFormObj>.Default.FromArray(AValue);
  Result := TFormArray.Create;
  Result.Dataset := LArr;
end;

class function TFormArray.FromJSON(const AValue: string): TFormArray;
begin
  var LArr := TJSONMapper<TFormObj>.Default.FromArray(AValue);
  Result := TFormArray.Create;
  Result.Dataset := LArr;
end;

function TFormArray.ToJSONArray: TJSONArray;
begin
  Result := TJSONMapper<TFormObj>.Default.ToArray(Dataset);
end;

function TFormArray.ToJSONString: string;
begin
  Result := TJSONMapper<TFormObj>.Default.ToString(Dataset);
end;

initialization

  RegisterClass(TContent);
  RegisterClass(TTopic);
  RegisterClass(TFormObj);
  RegisterClass(TFormArray);

end.
